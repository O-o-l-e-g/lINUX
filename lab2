#!/bin/bash
DEVSDB=$(udevadm info -q symlink --root /dev/sdb | tr  ' ' '\n' | grep -w '/dev/disk/by-id.*')
DEVSDB1="${DEVSDB}-part1"
DEVSDB2="${DEVSDB}-part2"
DEVSDB3="${DEVSDB}-part3"
DEVSDB4="${DEVSDB}-part4"

# Создайте новый раздел, начинающийся с первого свободного сектора и имеющий размер 300 МБайт.
fdisk /dev/sdb <<EEOF
n
p
1
+300M
w
EEOF

# Создайте файл в домашнем каталоге пользователя root и сохраните в него UUID созданного раздела.
blkid $DEVSDB1 -s PARTUUID -o value > ~/sdb1.uuid

# Создайте на созданном разделе файловую систему ext4 с размером блока 4096 байт.
mkfs.ext4 -b 4096 $DEVSDB1
blkid $DEVSDB1 -o value | head -1 > uuid.txt

# Выведите на экран текущее состояние параметров, записанных в суперблоке созданной файловой системы.
dumpe2fs -h $DEVSDB1

# Настройте эту файловую систему таким образом, чтобы ее автоматическая проверка запускалась через 2 месяца или каждое второе монтирование файловой системы.
tune2fs -c 2 -i 60 $DEVSDB1

# Создайте в каталоге /mnt подкаталог newdisk и подмонтируйте в него созданную файловую систему.
mkdir /mnt/newdisk
mount $DEVSDB1 /mnt/newdisk

# Создайте в домашнем каталоге пользователя root ссылку на смонтированную файловую систему
ln -s /mnt/newdisk ~/newdisk

# Создайте каталог с любым именем в смонтированной файловой системе.
mkdir ~/newdisk/newdir

# Включите автомонтирование при запуске операционной системы созданной файловой системы в /mnt/newdisk таким образом, 
# чтобы было невозможно запускать исполняемые файлы, находящиеся в этой системе, а также с отключением возможности записи времени последнего доступа к файлу
# для ускорения работы с этой файловой системой. Перезагрузите операционную систему и проверьте доступность файловой системы. 
# Проверьте невозможность запустить исполняемый файл, если он хранится в этой файловой системе.
NEWDISK_FSTAB="$DEVSDB1 /mnt/newdisk ext4 noexec,noatime 0 0"
grep -q "$NEWDISK_FSTAB" /etc/fstab && echo $NEWDISK_FSTAB >> /etc/fstab/

# Увеличьте размер раздела и файловой системы до 350 МБайт. Проверьте, что размер изменился.
umount $DEVSDB1
fdisk $DEVSDB <<EEOF
d
n
p
1
+350M
N
w
EEOF
e2fsck -f $DEVSDB1
resize2fs $DEVSDB1

# Проверьте на наличие ошибок созданную файловую системы "в безопасном режиме", то есть в режиме запрета внесения каких-либо изменений в файловую систему, даже если обнаружены ошибки
e2fsck -n $DEVSDB1

# Создайте новый раздел, размером в 12 Мбайт. Настройте файловую систему, созданную в пункте 3 таким образом, чтобы ее журнал был расположен на разделе, созданном в этом пункте.
fdisk $DEVSDB
n
p
2
(space)
+12M
w
EEOF
mke2fs -O journal_dev $DEVSDB2
mke2fs -t ext4 -J device=$DEVSDB2 $DEVSDB1

# Создайте два новых раздела, размером в 100 МБайт каждый.
fdisk $DEVSDB <<EEOF
n
p
+100M
w
EEOF

# Создайте группу разделов LVM и логический том LVM над созданными в предыдущем пункте разделами. Создайте файловую систему ext4 
# для созданного логического тома LVM и смонтируйте её в предварительно созданный каталог supernewdisk в каталоге mnt.
vgcreate vg14 $DEVSDB1 $DEVSDB2
lvcreate -n lv14 -l 100%FREE vg14
mkfs.ext4 /dev/vg14/lv14
mkdir /mnt/supernewdisk
mount /dev/vg14/lv14 /mnt/supernewdisk

# Создайте папку (каталог) в хостовой операционной системе и предоставьте к ней сетевой доступ, создав сетевой ресурс на хостовой операционной системе. 
# Создайте в директории /mnt поддиректорию share и подмонтируйте в нее созданный сетевой ресурс.
mkdir /mnt/share
nano /etc/wincredentials ### вводим необходимые креды
mount -t cifs //10.0.2.2/shareFolder /mnt/supernewdisk -o credentials=/etc/wincredentials

# Сделайте так, чтобы сетевой ресурс автоматически монтировалcя для чтения при загрузке операционной системы. 
# Перезагрузите операционную систему и проверьте, что автоматическое монтирование ресурса выполнилось.
SHARE1_FSTAB="//10.0.2.2/shareFolder /mnt/newsuperdisk cifs credentials=/etc/wincredentials 0 0"
grep -q "$SHARE1_FSTAB" /etc/fstab && echo $SHARE1_FSTAB >> /etc/fstab/
